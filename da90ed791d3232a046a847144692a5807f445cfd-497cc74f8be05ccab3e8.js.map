{"version":3,"file":"da90ed791d3232a046a847144692a5807f445cfd-497cc74f8be05ccab3e8.js","mappings":"+GAWA,MAAMA,GAAYC,E,QAAAA,SAAO,OAAOC,WAAW,CACzCC,kBAAoBC,IAAU,CAAC,WAAY,OAAQ,MAAO,SAAU,OAAQ,SAASC,SAASD,KAC7FE,OAAsBC,IAAAA,IAAC,KACxBC,EAAO,EAAC,IAAEC,EAAG,OAAEC,EAAM,MAAEC,EAAK,SAAEC,GAAW,EAAK,KAAEC,GAAO,GACxD,QAAM,CACLL,OACAC,IAAKA,QAAAA,EAAOD,EACZE,OAAQA,QAAAA,EAAUF,EAClBG,QACAC,WACAC,OACD,IAAE,gEAXeZ,CAWf,oEAEca,GAASA,EAAML,MACZK,GAASA,EAAMJ,SAC/BK,IAAAA,IAAC,MAAEJ,GAAO,SAAKA,GAAS,oBACXA,UACd,IACCK,IAAAA,IAAC,SAAEJ,GAAU,SAAKA,GAAY,6DAG/B,IACCK,IAAAA,IAAC,KAAEJ,GAAM,SAAKA,GAAQ,0BAEvB,IAGH,K,ilt5BCdO,MAAMK,E,84v6EACAC,EAAiDC,C,mECpB9D,MAAMC,EAAUpB,EAAAA,QAAOqB,KAAI,2EAAXrB,CAAW,8IAELsB,EAAAA,EAAQC,KASxBC,GAAYxB,EAAAA,EAAAA,SAAOyB,EAAAA,KAAc,6EAArBzB,CAAqB,2CAwBvC,IAdgDM,IAAsB,IAArB,KAAEoB,EAAI,MAAEC,GAAO,EAC9D,MAAa,QAATD,EAEAE,EAAAA,cAACR,EAAO,KAAEO,GAIVC,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAACJ,EAAS,CAACK,OAAOC,EAAAA,EAAAA,GAAcH,KAGtC,C,8ECrCK,MAAML,EAAU,CACrBS,QAAS,UACTR,IAAK,UACLS,SAAU,WAGCF,EAAiBH,IACsB,CAChD,IAAO,UACP,KAAQ,UACR,MAAS,UACT,MAAS,UACT,OAAU,UACV,KAAQ,UACR,OAAU,UACV,OAAU,WAEUA,IAAU,U","sources":["webpack://in-the-loop/./src/components/Container.tsx","webpack://in-the-loop/./src/config/index/index.ts","webpack://in-the-loop/./src/components/TransitIcon.tsx","webpack://in-the-loop/./src/styles/palette.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ninterface ContainerProps {\n  size?: number;\n  top?: number;\n  bottom?: number;\n  width?: number;\n  centered?: boolean;\n  flex?: boolean;\n}\n\nconst Container = styled('div').withConfig({\n  shouldForwardProp: (prop) => !['centered', 'flex', 'top', 'bottom', 'size', 'width'].includes(prop),\n}).attrs<ContainerProps>(({\n  size = 8, top, bottom, width, centered = false, flex = false,\n}) => ({\n  size,\n  top: top ?? size,\n  bottom: bottom ?? size,\n  width,\n  centered,\n  flex,\n})) <ContainerProps>`\n  margin: auto;\n  padding-top: ${props => props.top}px;\n  padding-bottom: ${props => props.bottom}px;\n  ${({ width }) => width && `\n    max-width: ${width}px;\n  `}\n  ${({ centered }) => centered && `\n    text-align: center;\n    justify-content: center;\n  `}\n  ${({ flex }) => flex && `\n    display: flex;\n  `}\n`\n\nexport default Container\n","import stationData from \"./stations.json\";\nimport trackData from \"./tracks.json\";\n\nexport type Track = {\n  type: string;\n  route: string;\n  routeName: string;\n  stop: string;\n  stopName: string;\n  direction: string;\n  headsign: string[];\n}\n\nexport type Station = {\n  name: string;\n  stops: StopTracks;\n  latitude: number;\n  longitude: number;\n}\n\nexport type StopTracks = {\n  [stopId: string]: string[];\n}\n\nexport const trackIndex: { [trackId: string]: Track } = trackData;\nexport const stationIndex: { [stationId: string]: Station } = stationData;\n","import * as React from \"react\";\nimport { FaTrainSubway } from \"react-icons/fa6\";\nimport styled from 'styled-components';\nimport { getTrainColor, palette } from '../styles/palette';\n\nconst BusIcon = styled.span`\n  display: inline-block;\n  background-color: ${palette.bus};\n  color: white;\n  padding: 0px 2px;\n  border-radius: 4px;\n  font-weight: 600;\n  text-align: center;\n  min-width: 24px;\n`;\n\nconst TrainIcon = styled(FaTrainSubway)`\n  vertical-align: middle;\n  font-size: 20px;\n`\n\ninterface TransitIconProps {\n  type: 'train' | 'bus';\n  route: string;\n}\n\nconst TransitIcon: React.FC<TransitIconProps> = ({ type, route }) => {\n  if (type === 'bus') {\n    return (\n      <BusIcon>{route}</BusIcon>\n    );\n  } else {\n    return (\n      <span>\n        <TrainIcon color={getTrainColor(route)} />\n      </span>\n    );\n  }\n}\n\nexport default TransitIcon\n","export const palette = {\n  primary: '#2166b1',\n  bus: '#0b67be',\n  alertRed: '#db0000',\n}\n\nexport const getTrainColor = (route: string): string => {\n  const trainColorsMap: { [key: string]: string } = {\n    \"Red\": \"#c60c30\",\n    \"Blue\": \"#00a1de\",\n    \"Brown\": \"#62361b\",\n    \"Green\": \"#009b3a\",\n    \"Orange\": \"#f9461c\",\n    \"Pink\": \"#e27ea6\",\n    \"Purple\": \"#522398\",\n    \"Yellow\": \"#f9e300\",\n  }\n  return trainColorsMap[route] || \"#000000\"\n}\n"],"names":["Container","styled","withConfig","shouldForwardProp","prop","includes","attrs","_ref","size","top","bottom","width","centered","flex","props","_ref2","_ref3","_ref4","trackIndex","stationIndex","stationData","BusIcon","span","palette","bus","TrainIcon","FaTrainSubway","type","route","React","color","getTrainColor","primary","alertRed"],"sourceRoot":""}